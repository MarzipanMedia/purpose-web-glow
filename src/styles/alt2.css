
/* Performance-optimized CSS for Alt2 page */

/* LCP critical styles */
[data-lcp-element="true"] {
  opacity: 1 !important;
  transform: none !important;
  transition: none !important;
  content-visibility: auto;
}

/* Base animation states - optimized for performance */
.defer-animate {
  opacity: 0;
  transform: translateY(20px);
  will-change: opacity, transform; 
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  transition-delay: 0ms; /* No default delay to prevent waiting */
}

.animate-visible {
  opacity: 1;
  transform: translateY(0);
}

/* Remove animations for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
  .defer-animate {
    opacity: 1 !important;
    transform: none !important;
    transition: none !important;
  }
  
  [data-lcp-element="true"] {
    opacity: 1 !important;
    transform: none !important;
    transition: none !important;
  }
  
  .animate-visible {
    opacity: 1;
  }
}

/* Simplified mobile animations */
@media (max-width: 768px) {
  .defer-animate {
    transition-duration: 0.3s;
    transform: translateY(10px);
  }
  
  /* Reduce layout shift with pre-set dimensions */
  .container-custom {
    width: 100%;
    max-width: 1280px;
    margin-left: auto;
    margin-right: auto;
  }
}

/* Prevent image layout shifts */
img {
  height: auto;
  max-width: 100%;
}

/* Create containment boundaries with correct LCP handling */
section {
  contain: layout style paint;
}

/* Ensure LCP section isn't affected by content-visibility */
section:first-of-type {
  content-visibility: visible !important;
  contain-intrinsic-size: auto;
  contain: none;
}

/* Make sure LCPElement children are rendered immediately */
.lcp-element * {
  content-visibility: visible !important;
}

/* Blog-specific optimizations */
.blog-animate {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.4s ease-out, transform 0.4s ease-out;
}

/* Pre-connect hints for external resources */
.img-lazy {
  loading: lazy;
}

.img-eager {
  loading: eager;
}

/* Performance-optimized animations that won't affect LCP */
@keyframes fadeInAfterLCP {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Separate animations from layout/position styles */
.fade-in-after-lcp {
  animation: fadeInAfterLCP 0.5s ease-out forwards;
  animation-play-state: paused;
}

.lcp-loaded .fade-in-after-lcp {
  animation-play-state: running;
}
